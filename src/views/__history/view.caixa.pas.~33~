unit view.caixa;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, unit_globals,
  Vcl.Imaging.pngimage, unitDados, Vcl.Menus, Data.DB,
  Vcl.Grids, Vcl.DBGrids, Vcl.Mask, Vcl.DBCtrls, classe.ticket, WWPMaskEdit,
  classe.pdvlanc, view.caixa_aberto, view.caixa_fechado;

type
  TfrmCaixa = class(TForm)
    pnlInfo: TPanel;
    pnlInfoCaixa: TPanel;
    lblLInfoCaixa: TLabel;
    lblInfoCaixa: TLabel;
    pnlInfoOp: TPanel;
    lblLInfoOp: TLabel;
    lblInfoOp: TLabel;
    pnlInfoTicket: TPanel;
    lblLInfoTicket: TLabel;
    lblInfoTicket: TLabel;
    pnlInfoStatus: TPanel;
    lblInfoStatus: TLabel;
    pnlInfoHora: TPanel;
    lblInfoHora: TLabel;
    pnlInfoData: TPanel;
    lblInfoData: TLabel;
    tmrPDVHora: TTimer;
    pnlStatus: TPanel;
    pnlStatusServidor: TPanel;
    imgServidor: TImage;
    imgStatusServidor: TImage;
    lblServidorEnd: TLabel;
    pnlVersao: TPanel;
    lblStatusVersao: TLabel;
    lblPDV: TLabel;
    lblPDVId: TLabel;
    pnlProp: TPanel;
    pnlCaixa: TPanel;
    procedure tmrPDVHoraTimer(Sender: TObject);
    procedure FormShow(Sender: TObject);
    function fncServidorOk(): Boolean;
    procedure AbreCaixa(iModo: Integer);
    procedure prcTelaCaixaAberto;
    procedure prcTelaCaixaFechado;
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmCaixa: TfrmCaixa;

implementation

{$R *.dfm}

procedure TfrmCaixa.AbreCaixa(iModo: Integer);
begin

  if iModo = 1 then           // Abre CAIXA no modo NOVO CAIXA
  begin
    // Abre o formulário ABRIR_CAIXA como modal

  end else if iModo = 2 then  // Abre CAIXA no modo CONTINUA CAIXA
  begin
    // Verifica se esse CAIXA tem TICKET aberto no BD
    if frmDados.Ticket.fncTicketAberto then
    begin
      // Abre o TICKET na tela



    end;

  end;
end;

function TfrmCaixa.fncServidorOk: Boolean;
begin
  if frmDados.FDConnection.Connected then
  begin
    imgStatusServidor.Picture.LoadFromFile(ExtractFilePath(Application.ExeName) + '\assets\ok48.png');
    lblServidorEnd.Caption := frmDados.FDConnection.Params.Values['Server'];
    Result := True;
  end
  else
  begin
    imgStatusServidor.Picture.LoadFromFile(ExtractFilePath(Application.ExeName) + '\assets\erro.png');
    lblServidorEnd.Caption := frmDados.FDConnection.Params.Values['Server'];
    Result := False;
  end;
end;

procedure TfrmCaixa.FormCreate(Sender: TObject);
begin
  // Cria o formulário CAIXA ABERTO
//  frmCaixaAberto          := TfrmCaixaAberto.Create(Self);
//  frmCaixaAberto.Parent   := pnlCaixa;
//  frmCaixaAberto.Align    := alClient;

  // Cria o formulário CAIXA FECHADO
//  frmCaixaFechado         := TfrmCaixaFechado.Create(Self);
//  frmCaixaFechado.Parent  := pnlCaixa;
//  frmCaixaFechado.Align   := alClient;

  lblInfoCaixa.Caption  := frmDados.PdvLanc.IdCaixa; // gsCaixa;
  lblInfoOp.Caption     := frmDados.PdvLanc.OpNome; // gsNomeUsuario;
  lblPDVId.Caption      := frmDados.PdvLanc.IdPDV; // gsPDV;
  lblServidorEnd.Caption:= frmDados.Conexao.Servidor; // IP do servidor
  pnlProp.Caption       := gsProprietario;
  lblInfoHora.Caption   := TimeToStr(Now);
  lblInfoData.Caption   := FormatDateTime('ddd, d mmm yyyy',Date).ToUpper;



end;

procedure TfrmCaixa.FormShow(Sender: TObject);
begin
  if gbCaixaAberto then
  begin
    prcTelaCaixaAberto;
    frmCaixaAberto.Show;
  end
  else
  begin
    prcTelaCaixaFechado;
    frmCaixaFechado.Show;
  end;

end;

procedure TfrmCaixa.prcTelaCaixaAberto;
begin
  pnlInfo.Color         := CCorAberto;
  lblInfoStatus.Caption := 'CAIXA ABERTO';

  // Cria o formulário CAIXA ABERTO
  frmCaixaAberto          := TfrmCaixaAberto.Create(Self);
  frmCaixaAberto.Parent   := pnlCaixa;
  frmCaixaAberto.Align    := alClient;
  end;

procedure TfrmCaixa.prcTelaCaixaFechado;
begin
  pnlInfo.Color         := CCorFechado;
  lblInfoStatus.Caption := 'CAIXA FECHADO';

  // Cria o formulário CAIXA FECHADO
  frmCaixaFechado         := TfrmCaixaFechado.Create(Self);
  frmCaixaFechado.Parent  := pnlCaixa;
  frmCaixaFechado.Align   := alClient;
end;

procedure TfrmCaixa.tmrPDVHoraTimer(Sender: TObject);
begin
  lblInfoHora.Caption := TimeToStr(Now);
  lblInfoData.Caption := FormatDateTime('ddd, d mmm yyyy',Date).ToUpper;
end;

end.
