unit classe.pdvlanc;

interface
uses
  FireDAC.Comp.Client,
  FireDAC.DApt,
  System.SysUtils,
  Vcl.Forms;

Type
  TPdvLanc = class
    private
      FConexao    : TFDConnection;
      FMsgErro    : string;
      FidPDV      : string;
      FidCaixa    : string;
      FidUsuario  : Integer;
      FUsuario    : string;

    public
      property Conexao    : TFDConnection read FConexao write FConexao;
      property MsgErro    : string Read FMsgErro Write FMsgErro;
      property IdPDV      : string read FidPDV write FidPDV;
      property IdCaixa    : string read FidCaixa write FidCaixa;
      property IdUsuario  : Integer read FidUsuario write FidUsuario;
      property Usuario    : string read FUsuario write FUsuario;

      constructor Create(Conexao : TFDConnection);
      destructor Destroy; override;

      function fncCaixaAberto: Boolean;
      function fncCaixaDisponivel: Boolean;
//      function prcGravar: Boolean;
      procedure prcFechar;
      procedure prcAbrir;
  end;

var
  QryConsulta : TFDQuery;

implementation
uses
  unit_funcoes, unit_globals;

{ TPdvLanc }

constructor TPdvLanc.Create(Conexao: TFDConnection);
begin
  FConexao := Conexao;
  QryConsulta := TFDQuery.Create(nil);
  QryConsulta.Connection := FConexao;
end;

destructor TPdvLanc.Destroy;
begin
  QryConsulta.Destroy;
  inherited;
end;

function TPdvLanc.fncCaixaDisponivel: Boolean;
begin

end;

function TPdvLanc.fncCaixaAberto: Boolean;


begin
  try

  finally
  end;
end;

procedure TPdvLanc.prcAbrir;
begin
  try
    try
      FConexao.Connected := True;
    except on E: Exception do
    begin
      FMsgErro := E.Message;
      gbServidorOk := False;
    end;
    end;

  finally
    gbServidorOk := True;
  end;

end;

procedure TPdvLanc.prcFechar;
begin
  FConexao.Connected := False;
end;

end.
