unit unit_funcoes;

interface

uses
  IdHMACSHA1,
  unit_HMAC,
  WWPDBEdit,
  WWPEdit,
  WWPMaskEdit,
  unit_AES,

  System.IniFiles,
  System.NetEncoding,
  System.SysUtils,

  Vcl.Controls,
  Vcl.Dialogs,
  Vcl.Forms,
  Vcl.Mask,
  Vcl.StdCtrls;

function fncCriarMensagem(TituloJanela, TituloMsg, Msg, Icone, Tipo : string) : Boolean;
function fncRemoveCaracteres(AString : string) : string;
function fncValidaLicenca() : Boolean;
function fncValidaSenha(Usuario, Senha, SenhaDB: string): Boolean;
function Space(aLenght: Integer): string;
procedure prcValidarCamposObrigatorios(Form : TForm);

implementation

uses
  view.mensagens,
  unit_globals;

function fncCriarMensagem(TituloJanela, TituloMsg, Msg, Icone, Tipo : string) : Boolean;
begin
    Result := False;

    frmMensagem := TfrmMensagem.Create(nil);

    frmMensagem.sTituloJanela := TituloJanela;
    frmMensagem.sTituloMsg := TituloMsg;
    frmMensagem.sMensagem := Msg;
    frmMensagem.sCaminhoIcone := Icone;
    frmMensagem.sTipo := Tipo;

    frmMensagem.ShowModal;
    Result := frmMensagem.bRespostaMSG;
end;

function fncRemoveCaracteres(AString : string) : string;
var
  I : Integer;
  Limpos : string;
begin
  Limpos := '';
  for I := 1 to Length(AString) do
  begin
      if Pos(Copy(AString, I, 1), '"!%$#@&¨*().,;:/<>[]=+-_\|') = 0 then
        Limpos := Limpos + Copy(AString, I, 1);
  end;
  Result := Limpos;

end;

procedure prcValidarCamposObrigatorios(Form : TForm);
var
  i : Integer;
begin
  for i := 0 to Form.ComponentCount - 1 do
  begin
    if Form.Components[i].Tag = 5 then
    begin
      // TEdit
      if Form.Components[i] is TEdit then
        if ((Form.Components[i] as TEdit).Hint <> '') and
           (Trim(fncRemoveCaracteres((Form.Components[i] as TEdit).Text)) = '') then
        begin
          fncCriarMensagem('AVISO!',
                          'DADOS OBRIGATÓRIOS',
                          'O campo ' + (Form.Components[i] as TEdit).Hint + ' é obrigatório',
                          ExtractFilePath(Application.ExeName) + '\assets\atencao.png',
                          'OK');
          if ((Form.Components[i] as TEdit).Enabled) then
            (Form.Components[i] as TEdit).SetFocus;
          Abort;

        end;


      // WWPEdit
      if Form.Components[i] is TWWPEdit then
        if ((Form.Components[i] as TWWPEdit).Hint <> '') and
             (Trim(fncRemoveCaracteres((Form.Components[i] as TWWPEdit).Text)) = '') then
        begin
          fncCriarMensagem('AVISO!',
                            'DADOS OBRIGATÓRIOS',
                            'O campo ' + (Form.Components[i] as TWWPEdit).Hint + ' é obrigatório',
                            ExtractFilePath(Application.ExeName) + '\assets\atencao.png',
                            'OK');
          if ((Form.Components[i] as TWWPEdit).Enabled) then
            (Form.Components[i] as TWWPEdit).SetFocus;
          Abort;

        end;
    end;
  end;
end;

function fncValidaLicenca() : Boolean;
var
  IniFile : string;
  Ini     : TIniFile;
  sID     : string;
  sProp   : string;
  sChave  : string;
begin
  IniFile := ChangeFileExt(Application.Exename, '.ini');
  Ini     := TIniFile.Create(IniFile);

  Result := False;
  if not FileExists(IniFile) then
  begin
    Result := False;
    Ini.Free;
  end
  else
  begin
    try
      sID     := Ini.ReadString('PDV','ID','');
      sProp   := UTF8ToString(Ini.ReadString('PDV','Proprietario',''));
      sChave  := Ini.ReadString('PDV','Chave','');

      if (sID = '') or (sProp = '') or (sChave = '') then
      begin
        Result := False;
      end
      else
      begin
        if THMAC<TidHmacsha256>.ValidateLicenceKey(CKey, sProp, sID, sChave) then
        begin
          gsPDV := sID;
          gsProprietario := sProp;
          Result := True;
        end;
      end;
    finally
      Ini.Free;
    end;
  end;
end;

function fncValidaSenha(Usuario, Senha, SenhaDB: string): Boolean;
var
  valueHmac: string;
begin
  valueHmac := THMAC<TIdHMACSHA256>.HashValueBase64(CKey + Usuario.ToLower, Senha);
  Result := (SenhaDB = valueHmac);
end;

end.
